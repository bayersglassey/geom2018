
collmap "opening":
    ;;            + - + - + - + - + - +
    ;;           /*\*/*\*/*\*/*\*/*\*/*\
    ;;          + - + - + - + - + - + - +
    ;;         /*\*/*\*/*\*/*\*/*\*/*\*/*\
    ;;        + - + - + - + - + - + - + - +
    ;;       /*\*/*\*/*\*/*\*/*\*/*\*/*\*/*\
    ;;      + - + - + - + - + - + - + - + - +
    ;;     /*\*/*\*/*\*/*\*/*\*/*\*/*\*/*\*/*\
    ;;    + - + - + - + - + - + - + - + - + - +
    ;;   /*\*/*\*/*\*/*\*/*\*/*\*/*\*/*\*/*\*/*\
    ;;  + - + - + - + - + -(+)- + - + - + - + - +
    ;;   \*/*\*/*\*/*\*/*\*/*\*/*\*/*\*/*\*/*\*/
    ;;    + - + - + - + - + - + - + - + - + - +
    ;;     \*/*\*/*\*/*\*/*\*/*\*/*\*/*\*/*\*/
    ;;      + - + - + - + - + - + - + - + - +
    ;;       \*/*\*/*\*/*\*/*\*/*\*/*\*/*\*/
    ;;        + - + - + - + - + - + - + - +
    ;;         \*/*\*/*\*/*\*/*\*/*\*/*\*/
    ;;          + - + - + - + - + - + - +
    ;;           \*/*\*/*\*/*\*/*\*/*\*/
    ;;            + - + - + - + - + - +

collmap "looking":
    ;;                          + - +
    ;;                         /*\*/*\
    ;;                        + - + - +
    ;;                       /*\*/*\*/*\
    ;;                      + - + - + - +
    ;;                     /*\*/*\*/*\*/*\
    ;;                    + - + - + - + - +
    ;;                   /*\*/*\*/*\*/*\*/*\
    ;;                  + -(+)- + - + - + - +
    ;;                   \*/*\*/*\*/*\*/*\*/
    ;;                    + - + - + - + - +

collmap "looking_l": collmap("looking") ^  2
collmap "looking_d": collmap("looking") ^ -2

closed:
    rgraph: "eye_closed"

    if:
        any:
            not: exists myvar("key")
            expr: mapvar(myvar("key"))
        any:
            not: exists myvar("antikey")
            not: expr: mapvar(myvar("antikey"))
        coll: bodies "touch" any yes collmap("opening")
    then: goto delay: opening

opening:
    rgraph: "eye_opening"
    if() then:
        if: exists myvar("opened_key")
        then:
            inc mapvar(myvar("opened_key"))
        goto: open

open:
    rgraph: "eye_open"

    if: any:
        all:
            exists myvar("key")
            not: expr: mapvar(myvar("key"))
        all:
            exists myvar("antikey")
            expr: mapvar(myvar("antikey"))
        not: coll: bodies "touch" any yes collmap("opening")
    then: goto delay: closing

    if:
        coll: bodies "touch" any yes collmap("looking")
        not: coll: bodies "touch" any yes collmap("looking_l")
        not: coll: bodies "touch" any yes collmap("looking_d")
    then: goto delay: looking

    if:
        not: coll: bodies "touch" any yes collmap("looking")
        coll: bodies "touch" any yes collmap("looking_l")
        not: coll: bodies "touch" any yes collmap("looking_d")
    then: goto delay: looking_l

    if:
        not: coll: bodies "touch" any yes collmap("looking")
        not: coll: bodies "touch" any yes collmap("looking_l")
        coll: bodies "touch" any yes collmap("looking_d")
    then: goto delay: looking_d

closing:
    rgraph: "eye_closing"
    if() then:
        if: exists myvar("opened_key")
        then:
            dec mapvar(myvar("opened_key"))
        goto: closed

# "anim/_eye_looking.fus":
# Provides states looking, unlooking, look (with suffix indicated
# by LOOK_SUFFIX)
$SET_STR LOOK_SUFFIX ""
import "anim/_eye_looking.fus"
$SET_STR LOOK_SUFFIX "_l"
import "anim/_eye_looking.fus"
$SET_STR LOOK_SUFFIX "_d"
import "anim/_eye_looking.fus"
