
# Expected variables:
# RUNNING (bool)
# STATE_STAND (str)
# STATE_STEP (str)
# STATE_STEP_UP (str)
# STATE_STEP_DOWN (str)
# STATE_START_JUMP (str)
# STATE_RUN_STEP (str)
# STATE_RUN_STEP_UP (str)
# STATE_RUN_STEP_DOWN (str)
# STATE_RUN_START_JUMP (str)
# STATE_JUMP (str)


$GET_SYM STATE_STAND:
    rgraph: $PREFIX NS $GET_STR STATE_STAND
    hitbox: collmap("stand")

    # Stop running if we're not holding forward, or if we try to
    # turn around
    $IF RUNNING:
        if: any:
            key: wasdown b
            not: key: isdown f
        then:
            goto immediate: stop_running

    # Can't stand on nothing
    if:
        coll: any no
            ;;  (+)- +
    then:
        move: 1 0
        goto immediate: $GET_SYM STATE_START_JUMP

    # Spit
    if:
        key: wentdown y
    then:
        call: spit

    # Turn into roller
    $IF SPIDER_ROLLER:
        if:
            key: wentdown x
        then:
            goto: roller_stand
            delay: $GET_INT ROLLER_STAND_DELAY

    # Turn into bird
    $IF SPIDER_BIRD:
        if:
            key: wentdown x
            coll: all no
                ;;   .   .
                ;;   *\*/*
                ;; . - + - .
                ;;   */*\*
                ;;   . - .
                ;;   *\*/*
                ;; . - + - .
                ;;   */*\*
                ;;  (.)  .
        then:
            goto: bird_crawl
            delay: 1

    # Blink
    $IF SPIDER_EYE:
        if:
            key: wasdown x
        then:
            goto delay: eye_closing

    # Crawl
    if:
        key: isdown d
    then:
        goto delay: crawling

    # Stepping and jumping
    import "anim/_spider_move.state.fus"

    # Turn
    if:
        key: isdown b
    then:
        move: 1 0
        turn
        goto delay: turn

    # Look up
    $IF SPIDER_AIMER:
        if:
            key: isdown x
        then:
            goto: look_up

$GET_SYM STATE_START_JUMP:

    $IF SPIDER_FLIER:
        if:
            key: wasdown x
            coll: all no
                ;;       \*/*
                ;;        + -
                ;;       /*\*
                ;; ( )
        then:
            goto: flier_fly
            move: 2 1
            delay: 2

    if:
        coll: water any yes collmap("stand")
    then:
        goto delay: swim_jump

    if() then:
        goto delay: $GET_SYM STATE_JUMP

$GET_SYM STATE_JUMP:
    # NOTE: the only "goto: jump" is in "start_jump", which checks whether
    # we're in water, and does "goto: jump" or "goto: swim_jump"
    # accordingly.
    # Therefore, if we're in "jump", then we can safely assume we're not in
    # water without checking.

    unsafe
    rgraph: $PREFIX NS $GET_STR STATE_JUMP
    hitbox: collmap("stand")

    # Landing, jumping, crashing
    import "anim/_spider_jump.state.fus"

$GET_SYM STATE_STEP_DOWN:
    rgraph: $PREFIX NS $GET_STR STATE_STEP
    hitbox:
        ;;   .   .   .
        ;;   *\*/*\*/*
        ;; . - + - + - .
        ;;   */*\*/*\*
        ;;   .  (.)  .

    if:
        key: wentdown y
    then:
        call: spit

    $IF SPIDER_ROLLER:
        if:
            key: wentdown x
        then:
            goto: roller_stand
            delay: $GET_INT ROLLER_STAND_DELAY

    if() then: goto: $GET_SYM STATE_STAND

$GET_SYM STATE_STEP:
    rgraph: $PREFIX NS $GET_STR STATE_STEP
    hitbox: collmap("stand")

    if:
        key: wentdown y
    then:
        call: spit

    $IF SPIDER_ROLLER:
        if:
            key: wentdown x
        then:
            goto: roller_stand
            delay: $GET_INT ROLLER_STAND_DELAY

    if() then: goto: $GET_SYM STATE_STAND
