
# Expected vars:
# NS (str), e.g. "player_"

# NOTE: make sure "stand" is the first anim, so any imports
# should go below it

$IF PLAYER_SPIKEY:
    $SET_STR SPIT_FUS "anim/spikeyspit.fus"
$IF !PLAYER_SPIKEY:
    $SET_STR SPIT_FUS "anim/spit.fus"


$SET_INT ROLLER_STAND_DELAY 0

$SET_STR STATE_STEP_UP step
$SET_STR STATE_LAND step
$SET_STR STATE_LAND_UP step


collmsgs: "touch"
on "crush": goto: dead


stand:
    rgraph: $PREFIX NS "stand"

    hitbox:
        ;;   .   .
        ;;   *\*/*
        ;; . - + - .
        ;;   */*\*
        ;;  (.)  .

    # Can't stand on nothing
    if:
        coll: any no
            ;;  (+)- +
    then:
        move: 1 0
        goto immediate: start_jump

    # Spit
    if:
        key: wentdown y
    then:
        spawn: $GET_STR SPIT_FUS "fly" (0 0) 0 f
        goto delay: spit

    # Turn into roller
    $IF PLAYER_ROLLER:
        if:
            key: wentdown x
        then:
            goto: roller_stand
            delay: $GET_INT ROLLER_STAND_DELAY

    # Turn into bird
    $IF PLAYER_BIRD:
        if:
            key: wentdown x
            coll: all no
                ;;   .   .
                ;;   *\*/*
                ;; . - + - .
                ;;   */*\*
                ;;   . - .
                ;;   *\*/*
                ;; . - + - .
                ;;   */*\*
                ;;  (.)  .
        then:
            goto: bird_crawl
            delay: 1

    # Crawl
    if:
        key: isdown d
    then:
        goto delay: crawling

    # Stepping and jumping
    import "anim/_player_stand.state.fus"

    # Turn
    if:
        key: isdown b
    then:
        move: 1 0
        turn
        goto delay: step

    # Look up
    $IF PLAYER_AIMER:
        if:
            key: isdown x
        then:
            goto: look_up

look_up:
    rgraph: $PREFIX NS "look_up"
    hitbox:
        ;;   .   .
        ;;   *\*/*
        ;; . - + - .
        ;;   */*\*
        ;;  (.)  .
    if() then: goto: looking_up

looking_up:
    rgraph: $PREFIX NS "looking_up"
    hitbox:
        ;;   .   .
        ;;   *\*/*
        ;; . - + - .
        ;;   */*\*
        ;;  (.)  .

    if:
        key: wentdown y
    then:
        spawn: $GET_STR SPIT_FUS "fly" (1 0) 1 f
        goto delay: looking_up_spit

    if:
        key: wasdown u
        coll: all no
            ;;    *\*/*
            ;;    - + -
            ;;       \*
            ;;
            ;;
            ;; ( )
    then:
        move: 1 0
        rot: 1
        goto immediate: start_jump

    if: key: isdown f
    then: goto immediate: stand

    if: key: isdown b
    then: goto immediate: stand

    if:
        key: isdown d
    then:
        goto delay: crawling_looking_up

    if: key: not isdown x
    then: goto: stand

spit:
    rgraph: $PREFIX NS "spit"
    hitbox:
        ;;   .   .
        ;;   *\*/*
        ;; . - + - .
        ;;   */*\*
        ;;  (.)  .
    if() then: goto: stand

looking_up_spit:
    rgraph: $PREFIX NS "looking_up_spit"
    hitbox:
        ;;   .   .
        ;;   *\*/*
        ;; . - + - .
        ;;   */*\*
        ;;  (.)  .
    if() then: goto: looking_up

start_jump:

    $IF PLAYER_FLIER:
        if:
            key: wasdown x
            coll: all no
                ;;       \*/*
                ;;        + -
                ;;       /*\*
                ;; ( )
        then:
            goto: flier_fly
            move: 2 1
            delay: 2

    if:
        coll: water any yes
            ;;   .   .
            ;;   *\*/*
            ;; . - + - .
            ;;   */*\*
            ;;  (.)  .
    then:
        goto delay: swim_jump

    if() then:
        goto delay: jump

jump:
    # NOTE: the only "goto: jump" is in "start_jump", which checks whether
    # we're in water, and does "goto: jump" or "goto: swim_jump"
    # accordingly.
    # Therefore, if we're in "jump", then we can safely assume we're not in
    # water without checking.

    rgraph: $PREFIX NS "jump"
    unsafe

    hitbox:
        ;;   .   .
        ;;   *\*/*
        ;; . - + - .
        ;;   */*\*
        ;;  (.)  .

    # Landing, jumping, crashing
    import "anim/_player_jump.state.fus"

step_down:
    rgraph: $PREFIX NS "step"
    hitbox:
        ;;   .   .   .
        ;;   *\*/*\*/*
        ;; . - + - + - .
        ;;   */*\*/*\*
        ;;   .  (.)  .

    if:
        key: wentdown y
    then:
        spawn: $GET_STR SPIT_FUS "fly" (0 0) 0 f
        goto delay: spit

    $IF PLAYER_ROLLER:
        if:
            key: wentdown x
        then:
            goto: roller_stand
            delay: $GET_INT ROLLER_STAND_DELAY

    if() then: goto: stand

step:
    rgraph: $PREFIX NS "step"
    hitbox:
        ;;   .   .
        ;;   *\*/*
        ;; . - + - .
        ;;   */*\*
        ;;  (.)  .

    if:
        key: wentdown y
    then:
        spawn: $GET_STR SPIT_FUS "fly" (0 0) 0 f
        goto delay: spit

    $IF PLAYER_ROLLER:
        if:
            key: wentdown x
        then:
            goto: roller_stand
            delay: $GET_INT ROLLER_STAND_DELAY

    if() then: goto: stand

sleep:
    rgraph: $PREFIX NS "sleep"
    hitbox:
        ;;     .
        ;;     *
        ;;  (.)  .
    if: any:
        key: isdown u
        key: isdown d
        key: isdown l
        key: isdown r
    then: goto: crawl

mostly_dead:
    rgraph: "dead_cycle"
    unsafe
    if() then: die mostly

dead:
    rgraph: "dead_cycle"
    unsafe
    if() then: die

import "anim/_player_crawl.fus"
import "anim/_player_swim.fus"
