
# Expected to be imported by "anim/_spider.fus"

# Expected vars:
# NS (str), e.g. "spider_"


proc crawl_crush:
    if: expr: myvar("is_spider_spikey")
    then: goto delay: crawl_shielding


crawling:
    rgraph: $PREFIX NS "crawling"
    hitbox: collmap("stand")
    if() then: goto: crawl

uncrawling:
    rgraph: $PREFIX NS "uncrawling"
    hitbox: collmap("stand")
    if() then: goto: stand

crawling_looking_up:
    rgraph: $PREFIX NS "crawling_looking_up"
    hitbox: collmap("stand")
    if() then: goto: crawl_looking_up

uncrawling_looking_up:
    rgraph: $PREFIX NS "uncrawling_looking_up"
    hitbox: collmap("stand")
    if() then: goto: looking_up

crawl_looking_up:
    rgraph: $PREFIX NS "crawl_looking_up"
    hitbox: collmap("crawl")
    on "crush": call: crawl_crush

    if:
        key: wentdown y
    then:
        call: crawl_looking_up_spit

    if:
        key: not isdown d
        coll: all no
            ;;  *\*/*
            ;;  - + -
            ;;  */ \*
            ;; ( )
    then:
        goto delay: uncrawling_looking_up

    if: key: wasdown f
    then: goto immediate: crawl

    if: key: wasdown b
    then: goto immediate: crawl

    if: key: not isdown x
    then: goto: crawl

crawl_spit:
    rgraph: $PREFIX NS "crawl_spit"
    hitbox: collmap("crawl")
    on "crush": call: crawl_crush
    if() then: goto: crawl

crawl_looking_up_spit:
    rgraph: $PREFIX NS "crawl_looking_up_spit"
    hitbox: collmap("crawl")
    on "crush": call: crawl_crush
    if() then: goto: crawl_looking_up

crawl:
    rgraph: $PREFIX NS "crawl"
    hitbox: collmap("crawl")

    on "crush": call: crawl_crush

    # Spit
    if:
        key: wentdown y
    then:
        call: crawl_spit

    # Turn into roller
    if:
        expr: myvar("is_spider_roller")
        key: wentdown x
    then:
        goto: roller_stand
        delay: $GET_INT ROLLER_STAND_DELAY

    # Turn into bird
    if:
        expr: myvar("is_spider_bird")
        key: wentdown x
        coll: all no
            ;;   .   .
            ;;   *\*/*
            ;; . - + - .
            ;;   */*\*
            ;;   . - .
            ;;   *\*/*
            ;; . - + - .
            ;;   */*\*
            ;;  (.)  .
    then:
        goto: bird_crawl
        delay: 1

    # Uncrawl
    if:
        key: not isdown d
        coll: all no
            ;;  *\*/*
            ;;  - + -
            ;;  */ \*
            ;; ( )
    then:
        goto delay: uncrawling

    # Crawling
    import "anim/_spider_crawl.state.fus"

    # Roll over a gap
    if:
        expr: myvar("is_spider_roller")
        key: wasdown f
        coll: all no
            ;;     \*
            ;; (.)  .
    then:
        goto: roller_stand
        move: 1 0
        turn
        rot: 1
        delay: $GET_INT ROLLER_STAND_DELAY

    # Roll into a corner
    if:
        expr: myvar("is_spider_roller")
        key: wasdown f
        coll: all yes
            ;;    +
            ;;     \
            ;; (.)  +
    then:
        goto: crawl_step
        move: 1 0
        rot: 2
        delay: 2

    # Turn
    if:
        key: wasdown b
        key: not isdown f
    then:
        move: 1 0
        turn
        goto: crawl_turn
        delay: 2

    # Look up
    if:
        expr: myvar("is_spider_aimer")
        key: not isdown f
        key: wasdown x
    then:
        goto: crawl_look_up

crawl_look_up:
    rgraph: $PREFIX NS "crawl_look_up"
    hitbox: collmap("crawl")
    on "crush": call: crawl_crush
    if() then: goto: crawl_looking_up

crawl_step_down:
    rgraph: $PREFIX NS "crawl_step"
    hitbox:
        ;;    .   .
        ;;    *\*/*
        ;;  . -(.)  .
    on "crush": call: crawl_crush

    if:
        key: wentdown y
    then:
        call: crawl_spit

    if:
        expr: myvar("is_spider_roller")
        key: wentdown x
    then:
        goto: roller_stand
        delay: $GET_INT ROLLER_STAND_DELAY

    if() then: goto: crawl

crawl_step:
    # If you make changes to this, you'll probably want to make same
    # changes to crawl_turn
    rgraph: $PREFIX NS "crawl_step"
    hitbox:
        ;;    .   .
        ;;      */*
        ;;     (.)  .
    on "crush": call: crawl_crush

    if:
        key: wentdown y
    then:
        call: crawl_spit

    if:
        expr: myvar("is_spider_roller")
        key: wentdown x
    then:
        goto: roller_stand
        delay: $GET_INT ROLLER_STAND_DELAY

    if() then: goto: crawl

crawl_turn:
    # Like crawl_step, but without the extended hitbox
    # (so you can turn around in-place while crouching, without exposing yourself
    # to being crushed)
    rgraph: $PREFIX NS "crawl_turn"
    hitbox: collmap("crawl")
    on "crush": call: crawl_crush

    if() then: goto immediate: crawl_step

crawl_shielding:
    rgraph: $PREFIX NS "crawl_shielding"
    # (No hitbox: we are invincible)
    if:
    then: goto: crawl
