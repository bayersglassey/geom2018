
# Version of the bird which can step over single edges, but whose
# legs are blocked by faces.

stand:
    rgraph: "bird_stand"

    crushbox:
        ;;   .   .
        ;;   *\*/*
        ;; . - + - .
        ;;   */*\*
        ;;   . - .
        ;;   *\*/*
        ;; . - + - .
        ;;   */*\*
        ;;  (.)  .

    if:
        key: isdown d
    then:
        goto: crawl
        delay: 3

    if:
        key: isdown f
    then:
        goto: step
        delay: 1

    if:
        key: isdown b
    then:
        goto: turn
        delay: 1

turn:
    rgraph: "bird_turn"
    crushbox:
        ;;   .   .
        ;;   *\*/*
        ;; . - + - .
        ;;   */*\*
        ;;   . - .
        ;;   *\*/*
        ;; . - + - .
        ;;   */*\*
        ;;  (.)  .
    if() then:
        move: 1 0
        turn
        goto: turn_arrive
        delay: 1

step:
    rgraph: "bird_step"

    crushbox:
        ;;   .   .
        ;;   *\*/*
        ;; . - + - .
        ;;   */*\*
        ;;   . - .
        ;;   *\*/*
        ;; . - + - .
        ;;   */*\*
        ;;  (.)  .

    if:
        # Turned off for now (with false)... I think I prefer it so
        # tapping f attempts a full step.
        false
        key: not isdown f
    then:
        goto: step_rev
        delay: 2

    if:
        coll: all yes
            ;;              +
            ;;
            ;;        .   +
            ;;
            ;; ( )  .
        coll: all no
            ;;         .   .
            ;;         *\*/*
            ;;   .   . - + - .
            ;;         */*\*
            ;; .   .   .   .
            ;;
            ;;  (.)  .
    then:
        move: 3 1
        rot: 1
        goto: step_rot_up_arrive
        delay: 2

    if:
        coll: all yes
            ;; ( )  .
            ;;
            ;;        +   +
        coll: all no
            ;;       /*\*/*
            ;;      + - + - .
            ;;       \*/*\*
            ;;        . - .
            ;;        *\*/*
            ;; ( )  . - + - .
            ;;        */*\*
            ;;        .   .
    then:
        move: 1 -1
        goto: step_down_arrive
        delay: 2

    if:
        coll: all yes
            ;;        +   +
            ;;
            ;; ( )  .
        coll: all no
            ;;        *\*/*
            ;;      . - + - .
            ;;       \*/*\*
            ;;        + - .
            ;;       /*\*/*
            ;;      . - + - .
            ;;        */*\*
            ;;        .   .
            ;;
            ;; ( )  .
    then:
        move: 2 1
        goto: step_up_arrive
        delay: 2

    if:
        coll: all yes
            ;; ( )  .
            ;;
            ;;        +
        coll: all no
            ;;       /*\*/*
            ;;      + - + -
            ;;       \*/*\*/*\*/*
            ;;        . - + - + -
            ;;        *\*/*\*/*\*
            ;; ( )  . - + - .
            ;;        */*\*
            ;;        .   .
    then:
        move: 1 0
        rot: -1
        goto: step_rot_down_arrive
        delay: 2

    if() then:
        goto: step_rev
        delay: 2

turn_arrive:
    rgraph: "bird_turn_arrive"
    crushbox:
        ;;   .   .
        ;;   *\*/*
        ;; . - + - .
        ;;   */*\*
        ;;   . - .
        ;;   *\*/*
        ;; . - + - .
        ;;   */*\*
        ;;  (.)  .
    if() then: goto: stand

step_rev:
    rgraph: "bird_step_rev"
    crushbox:
        ;;   .   .
        ;;   *\*/*
        ;; . - + - .
        ;;   */*\*
        ;;   . - .
        ;;   *\*/*
        ;; . - + - .
        ;;   */*\*
        ;;  (.)  .
    if() then: goto: stand

step_rot_up_arrive:
    rgraph: "bird_step_rot_up_arrive"
    crushbox:
        ;;   .   .
        ;;   *\*/*
        ;; . - + - .
        ;;   */*\*
        ;;   . - .
        ;;   *\*/*
        ;; . - + - .
        ;;   */*\*
        ;;  (.)  .
    if() then: goto: stand

step_down_arrive:
    rgraph: "bird_step_down_arrive"
    crushbox:
        ;;   .   .
        ;;   *\*/*
        ;; . - + - .
        ;;   */*\*
        ;;   . - .
        ;;   *\*/*
        ;; . - + - .
        ;;   */*\*
        ;;  (.)  .
    if() then: goto: stand

step_up_arrive:
    rgraph: "bird_step_up_arrive"
    crushbox:
        ;;   .   .
        ;;   *\*/*
        ;; . - + - .
        ;;   */*\*
        ;;   . - .
        ;;   *\*/*
        ;; . - + - .
        ;;   */*\*
        ;;  (.)  .
    if() then: goto: stand

step_rot_down_arrive:
    rgraph: "bird_step_rot_down_arrive"
    crushbox:
        ;;   .   .
        ;;   *\*/*
        ;; . - + - .
        ;;   */*\*
        ;;   . - .
        ;;   *\*/*
        ;; . - + - .
        ;;   */*\*
        ;;  (.)  .
    if() then: goto: stand

crawl:
    rgraph: "bird_crawl"

    hitbox:
        ;;   .   .
        ;;   *\*/*
        ;; . - + - .
        ;;   */*\*
        ;;  (.)  .
    crushbox: hitbox

    if:
        key: not isdown d
        coll: all no
            ;;   *\*/*
            ;; . - + - .
            ;;   */ \*
            ;;   . - .
            ;;
            ;; .   .   .
            ;;
            ;;  ( )
    then:
        delay: 2
        goto: stand

    if:
        key: isdown f
        coll: all yes
            ;;        +
            ;;
            ;; ( )  +
    then:
        move: 1 0
        rot: 1
        delay: 2

    if:
        key: isdown f
        coll: all yes
            ;; ( )  +   +
        coll: all no
            ;;       \*/*
            ;;        + -
            ;;       /*\*
            ;; ( )
    then:
        move: 1 0
        delay: 2

    if:
        key: isdown f
        coll: all yes
            ;; ( )  +
            ;;
            ;;        +
        coll: all no
            ;;       \*/*
            ;;        + -
            ;;       /*\*/*
            ;; ( )    - + -
            ;;        */*\*
    then:
        move: 1 0
        rot: -1
        delay: 2

    if:
        key: isdown b
    then:
        move: 1 0
        turn
        delay: 2



dead:
    rgraph: "player_dead"

